debug(ls)
l
ls
debug(ls)
ls
a
1
Q
ls
ls
ls()
clear
cls
ls()
Q
install.packages
install.packages("ggplot2")
install.packages("lattice")
library(ggplot2)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=.~drv, binwidth=2)
head(maacs[], 1:3])
head(maacs[, 1:3])
str(maacs)
library(datasets)
str(maacs)
library(ggplot)
str(mgp)
str(mgp)
str(mpg)
testdat <- data.frame(x = 1:100, y = rnorm(100))
testdat[50,2] <- 100
plot(testdat$x, testdat$y, type="l", ylim=c(-3,3))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
library(datasets)
data(airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets=.~Month)
airquality = transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data = airquality, facets=.~Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qnorm(0,95, 1100, sd=75)
qnorm(0.95, mean=1100, sd=75)
qnorm(0.50, mean=1100, sd=75)
75*0.196
qnorm(0.95)
qnorm(0.50)
qnorm(0.99)
1.645*75
+1100
123.375+1100
qnorm(0.95, mean=1100, std=7.5)
qnorm(0.95, mean=1100, sd=7.5)
data = c(-8, -3, +1, -2,-5)
std(data)
sd(data)
mean(data)
t(data)
t.test(data=data, mu=0)
t.test(x=data, mu=0)
t = 20/10
t
pt(-2, 8)
pt(-1.9, 8)
pt(-2.3, 8)
pt(-6.9, 8)
data = c(1, 1, 1, 0)
pt(x=data, mu=1)
pt(x=data, mu=1, n=4)
pt(data, mu=1)
help pt
?pt
t.test(x=data, mu=1)
t.test(x=data, mu=1, alternative="less")
n <- 1787
data <- seq(1, n)
length(data)
head(data)
data <- rep(0, n)
sum(data)
data[1:10] <- 1
sum(data)
sd(data)
mean(data)
z <- (mean(data) - 0.01)/(sd(data)/sqrt(n))
pnorm(-abs(z))
pnorm(0.95)
pnorm(0.5)
pnorm(0)
pnorm(1.645)
pnorm(1.654)
pnorm(1.645)
1.645*0.04
0.0558/0.04
pnorm(1.395)
pnorm(1.645)
1-pnorm(1.395)
a = c(140, 138, 150, 148, 135)
b = c(132, 135, 151, 146, 130)
t.test(a, b, paired=TRUE)
library(datasets)
data(mtcars)
q1 <- data(mtcars)
q1
q1$mtcars
qt(0.95, df=8)
qt(0.95, df=8)/3
10.305/sqrt(91)
power.t.test(power=.9, delta=.01, sd=.04, type="paried", alt="one.sided")$n
power.t.test(power=.9, delta=.01, sd=.04, type=paired, alt="one.sided")$n
help power.t.test
?power.t.test
power.t.test(power=0.9, delta=0.01, sd=0.04, type="paired", alternative="one.sided")
power.t.test(n=100, delta=0.01, sd=0.04, sig.level=0.05, type="paired", alt="one.sided")
pt
str(pt)
(0.01-0.00658)/0.004
pt(0, 1)
pt(0, 100)
pt(-0.855, 99)
1-0.1973078
pt(-0.855, 100)
pt(-0.855, 100)
pnorm(0)
pnorm(-0.855)
1-pnorm(-0.855)
pnorm(-1.96)
2*pnorm(-1.96)
t.test(x=2.56, df=16)
t.test(delta=2.56, df=16)
str(t.test)
?t.test
pt(0,1)
pt(-2.56, df=16)
2*pt(-2.56, df=16)
pt(-4/0.781, df=16)
2*pt(-4/0.781, df=16)
2*pt(-4/0.781, df=8)
2*pt(-4/0.781, df=8)
t = c(1, 0, 1)
var(t)
sd(t)
t = seq(0, 1787)
sum(t)
t = req(0, 1787)
t = rep(0, 1787)
t[1,10] = 1
t[1:10] = 1
sd(t)
10/1787
(10/1787-1)-/sd(t)
(10/1787-1)/sd(t)
pnorm( (10/1787-1)/sd(t) )
pnorm( (10/1787 -0.01)/sd(t) )
sd(t)
se(t)
pnorm( (10/1787 -0.01)/ (sd(t)/sqrt(1787)) )
?ppois
ppois(10,17.87)
t = (1, 0, 1, 1)
t = c(1, 0, 1, 1)
sd(t)
-0.25/0.25
pnorm(-1)
qt(0.1)
qnorm(0.1)
qnorm(0.5)
qnorm(0.1)
pnorm(1)
pt(delta=1, df=3)
pt(1, df=3)
pbinom(3, 4)
pbinom(3, 4, prob=0.5)
pbinom(0, 4, prob=0.5)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
setwd("E:/workspace/RStudio/SpecificationDataScience/Developing Data Products")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
use(rCharts)
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
install.packags("shinyapps")
install.packages("shinyapps")
install.packages(Rtool)
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='leqiaop1', token='E6DB2839CBA27CEB3C236484912F867C', secret='eM0xQIb3r7a51E12gk1BKQ07/+ifntfBJR2DSNbm')
library(shinyapps)
shinyapps::setAccountInfo(name='leqiaop1', token='E6DB2839CBA27CEB3C236484912F867C', secret='eM0xQIb3r7a51E12gk1BKQ07/+ifntfBJR2DSNbm')
installed.packages("RJSONIO")
shinyapps::setAccountInfo(name='leqiaop1', token='E6DB2839CBA27CEB3C236484912F867C', secret='eM0xQIb3r7a51E12gk1BKQ07/+ifntfBJR2DSNbm')
install.packages(c("markdown", "mime"))
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
detach("package:devtools", unload=TRUE)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
shinyapps::setAccountInfo(name='leqiaop1', token='E6DB2839CBA27CEB3C236484912F867C', secret='eM0xQIb3r7a51E12gk1BKQ07/+ifntfBJR2DSNbm')
installed.packages('RJSONIO')
install.packages('RJSONIO')
shinyapps::setAccountInfo(name='leqiaop1', token='E6DB2839CBA27CEB3C236484912F867C', secret='eM0xQIb3r7a51E12gk1BKQ07/+ifntfBJR2DSNbm')
terminateApp("stockVis")
library(sldify)
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
setwd("/media/sf_workspace/RStudio/SpecificationDataScience/DevelopingDataProducts/FinalProject/pitch")
slidify("index.Rmd")
publish(user = "plq2013", repo = "DevelopingDataProducts")
publish(user = "plq2013", repo = "DevelopingDataProducts")
publish(user = "plq2013", repo = "DevelopingDataProducts")
publish(user = "plq2013", repo = "DevelopingDataProducts")
publish(user = "plq2013", repo = "DevelopingDataProducts")
setwd("/media/sf_workspace/RStudio/SpecificationDataScience/DevelopingDataProducts/FinalProject/shinyApp")
library(shiny)
install.packages("shiny")
install.packages("caTools")
install.packages("shiny")
install.packages("htmltools")
install.packages("shiny")
install.packages("xtable")
install.packages("shiny")
library(shiny)
runApp()
installed.packages(ggplot2)
install.packages("ggplot2")
runApp()
install.packages("car")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
exit
exit()
quit()
quit
stop
stop
stop()
runApp()
runApp()
runApp()
runApp()
selected=names(mtcars)[lapply(mtcars,class)=="numeric"][[2]]
selected=names(mtcars)[lapply(mtcars,class)=="numeric"][[1]]
f <- formular(paste("x", "~", "y"))
f <- paste("x", "~", "y")
f <- x ~ y
class(f)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("A", 1:6, sep = "")
paste("A", "b", "c", sep = "")
paste("A", "b", "c", sep = " ")
paste("A", "#" , "b", "c", sep = " ")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$formular <- renderText( paste(input$ycol, "~", input$x1col, " + ", input$x2col, sep = " ") )
output$formular <- renderText( {paste(input$ycol, "~", input$x1col, " + ", input$x2col, sep = " ")} )
runApp()
